{"ast":null,"code":"import { LOAD_PRODUCTS, SET_LISTVIEW, SET_GRIDVIEW, UPDATE_SORT, SORT_PRODUCTS, UPDATE_FILTERS, FILTER_PRODUCTS, CLEAR_FILTERS } from '../actions';\n\nconst filter_reducer = (state, action) => {\n  if (action.type === LOAD_PRODUCTS) {\n    let max_price = action.payload.map(p => p.price);\n    max_price = Math.max(...max_price); //console.log(maxprice)\n\n    return { ...state,\n      allproducts: [...action.payload],\n      filteredproducts: [...action.payload],\n      filters: { ...state.filters,\n        maxprice: max_price,\n        price: max_price\n      }\n    };\n  }\n\n  if (action.type === SET_GRIDVIEW) {\n    return { ...state,\n      gridview: true\n    };\n  }\n\n  if (action.type === SET_LISTVIEW) {\n    return { ...state,\n      gridview: false\n    };\n  }\n\n  if (action.type === UPDATE_SORT) {\n    return { ...state,\n      sort: action.payload\n    };\n  }\n\n  if (action.type === SORT_PRODUCTS) {\n    const {\n      sort,\n      filteredproducts\n    } = state;\n    let tempproducts = [...filteredproducts];\n\n    if (sort === 'price-lowest') {\n      //console.log('price-lowest')\n      tempproducts = tempproducts.sort(function (a, b) {\n        return a.price - b.price;\n      });\n    }\n\n    if (sort === 'price-highest') {\n      //console.log('price-highest')\n      tempproducts = tempproducts.sort(function (a, b) {\n        return b.price - a.price;\n      });\n    }\n\n    if (sort === 'name-a') {\n      //console.log('name-a')\n      tempproducts = tempproducts.sort(function (a, b) {\n        return a.name.localeCompare(b.name);\n      });\n    }\n\n    if (sort === 'name-z') {\n      //console.log('name-z')\n      tempproducts = tempproducts.sort(function (a, b) {\n        return b.name.localeCompare(a.name);\n      });\n    }\n\n    return { ...state,\n      filteredproducts: tempproducts\n    };\n  }\n\n  if (action.type === UPDATE_FILTERS) {\n    const {\n      name,\n      value\n    } = action.payload;\n    return { ...state,\n      filters: { ...state.filters,\n        [name]: value\n      }\n    };\n  }\n\n  if (action.type === FILTER_PRODUCTS) {\n    //console.log('filtering all')\n    const {\n      allproducts\n    } = state;\n    const {\n      text,\n      category,\n      company,\n      color,\n      price,\n      shipping\n    } = state.filters;\n    let tempproducts = [...allproducts]; //for text search\n\n    if (text) {\n      tempproducts = tempproducts.filter(product => {\n        return product.name.toLowerCase().startsWith(text);\n      });\n    } //for category\n\n\n    if (category !== 'all') {\n      tempproducts = tempproducts.filter(product => product.category === category);\n    } //for company\n\n\n    if (company !== 'all') {\n      tempproducts = tempproducts.filter(product => product.company === company);\n    } //colors\n\n\n    if (color !== 'all') {\n      tempproducts = tempproducts.filter(product => {\n        //console.log(product)\n        return product.colors.find(c => c === color);\n      });\n    } //shipping\n\n\n    if (shipping === true) {\n      tempproducts = tempproducts.filter(product => product.shipping === true);\n    } //price\n\n\n    tempproducts = tempproducts.filter(product => product.price <= price);\n    return { ...state,\n      filteredproducts: tempproducts\n    };\n  }\n\n  if (action.type === CLEAR_FILTERS) {\n    return { ...state,\n      filters: { ...state.filters,\n        text: '',\n        company: 'all',\n        category: 'all',\n        color: 'all',\n        price: state.filters.maxprice,\n        shipping: false\n      }\n    };\n  }\n\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default filter_reducer;","map":{"version":3,"sources":["C:/Users/Dell XPS/Desktop/react practise/react-course-comfy-sloth-starter/src/reducers/filter_reducer.js"],"names":["LOAD_PRODUCTS","SET_LISTVIEW","SET_GRIDVIEW","UPDATE_SORT","SORT_PRODUCTS","UPDATE_FILTERS","FILTER_PRODUCTS","CLEAR_FILTERS","filter_reducer","state","action","type","max_price","payload","map","p","price","Math","max","allproducts","filteredproducts","filters","maxprice","gridview","sort","tempproducts","a","b","name","localeCompare","value","text","category","company","color","shipping","filter","product","toLowerCase","startsWith","colors","find","c","Error"],"mappings":"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","sourcesContent":["import {\r\n  LOAD_PRODUCTS,\r\n  SET_LISTVIEW,\r\n  SET_GRIDVIEW,\r\n  UPDATE_SORT,\r\n  SORT_PRODUCTS,\r\n  UPDATE_FILTERS,\r\n  FILTER_PRODUCTS,\r\n  CLEAR_FILTERS,\r\n} from '../actions'\r\n\r\nconst filter_reducer = (state, action) => {\r\n\r\nif(action.type === LOAD_PRODUCTS){\r\n  let max_price = action.payload.map((p)=>p.price)\r\n  max_price = Math.max(...max_price)\r\n  //console.log(maxprice)\r\n  return {\r\n    ...state,\r\n  allproducts: [...action.payload],\r\n  filteredproducts: [...action.payload],\r\n  filters:{\r\n  ...state.filters,\r\n  maxprice:max_price,\r\n  price:max_price\r\n  }\r\n  }\r\n}\r\n\r\nif(action.type === SET_GRIDVIEW){\r\n  return {\r\n    ...state,\r\n    gridview:true\r\n\r\n  }\r\n}\r\n\r\n\r\nif(action.type === SET_LISTVIEW){\r\n  return {\r\n    ...state,\r\n    gridview:false\r\n  }\r\n}\r\n\r\nif(action.type === UPDATE_SORT){\r\n  return {\r\n    ...state,\r\n    sort:action.payload,\r\n  }\r\n}\r\n\r\n\r\nif(action.type === SORT_PRODUCTS){\r\n  const {sort,filteredproducts} = state;\r\n  let tempproducts = [...filteredproducts];\r\n  if(sort === 'price-lowest'){\r\n    //console.log('price-lowest')\r\n    tempproducts = tempproducts.sort(function(a, b){\r\n      return a.price-b.price})\r\n  }\r\n\r\n  if(sort === 'price-highest'){\r\n    //console.log('price-highest')\r\n    tempproducts = tempproducts.sort(function(a, b){\r\n      return b.price-a.price})\r\n  \r\n  }\r\n\r\n  if(sort === 'name-a'){\r\n    //console.log('name-a')\r\n    tempproducts = tempproducts.sort(function(a, b){\r\n      return a.name.localeCompare(b.name)})\r\n  }\r\n\r\n  if(sort === 'name-z'){\r\n    //console.log('name-z')\r\n    tempproducts = tempproducts.sort(function(a, b){\r\n      return b.name.localeCompare(a.name)})\r\n  }\r\n  return {\r\n    ...state,\r\n    filteredproducts:tempproducts\r\n  }\r\n}\r\n\r\nif(action.type === UPDATE_FILTERS){\r\n  const {name,value} = action.payload\r\n  return {\r\n    ...state,\r\n    filters:{\r\n      ...state.filters,\r\n      [name]:value\r\n    }\r\n  }\r\n}\r\n\r\nif(action.type === FILTER_PRODUCTS){\r\n  //console.log('filtering all')\r\n  const {allproducts} = state\r\n\r\nconst {text,category,company,color,price,shipping} = state.filters\r\n\r\n  let tempproducts = [...allproducts]\r\n  //for text search\r\n  if(text){\r\n    tempproducts = tempproducts.filter((product)=>{\r\n      return product.name.toLowerCase().startsWith(text)\r\n    })\r\n  }\r\n\r\n  //for category\r\n  if(category!== 'all'){\r\n    tempproducts = tempproducts.filter((product)=>\r\n    product.category === category)\r\n  }\r\n\r\n  //for company\r\n  if(company!=='all' ){\r\n    tempproducts = tempproducts.filter((product)=>\r\n    product.company === company)\r\n  }\r\n\r\n  //colors\r\n  if(color!=='all'){\r\n    tempproducts = tempproducts.filter((product)=>{\r\n      //console.log(product)\r\n      return product.colors.find((c)=>c===color)\r\n    })\r\n  }\r\n\r\n  //shipping\r\n  if(shipping === true){\r\n    tempproducts = tempproducts.filter((product)=>\r\n    product.shipping === true)\r\n  }\r\n\r\n  //price\r\n    tempproducts = tempproducts.filter((product)=>\r\n    product.price <= price)\r\n  \r\n  return {\r\n      ...state,\r\n      filteredproducts:tempproducts\r\n  }\r\n}\r\n\r\nif(action.type === CLEAR_FILTERS){\r\n  return {\r\n      ...state,\r\n      filters :{\r\n        ...state.filters,\r\n        text:'',\r\n        company:'all',\r\n        category:'all',\r\n        color:'all',\r\n        price:state.filters.maxprice,\r\n        shipping:false\r\n      }\r\n  }\r\n}\r\n\r\n  throw new Error(`No Matching \"${action.type}\" - action type`)\r\n}\r\n\r\nexport default filter_reducer\r\n"]},"metadata":{},"sourceType":"module"}