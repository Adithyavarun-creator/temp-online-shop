{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell XPS\\\\Desktop\\\\react practise\\\\react-course-comfy-sloth-starter\\\\src\\\\components\\\\StripeCheckout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { CardElement, useStripe, Elements, useElements } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport { useCartContext } from '../context/cart_context';\nimport { useUserContext } from '../context/user_context';\nimport { formatPrice } from '../utils/helpers';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst promise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIEC_KEY);\n\nconst CheckoutForm = () => {\n  _s();\n\n  const {\n    cart,\n    totalamount,\n    shippingfee,\n    clearcart\n  } = useCartContext();\n  const {\n    myUser\n  } = useUserContext();\n  const history = useHistory(); //stripe stuff\n\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabeld] = useState(true);\n  const [clientSecret, setClientSecret] = useState(false);\n  const cardStyle = {\n    style: {\n      base: {\n        color: '#32325d',\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: 'antialiased',\n        fontSize: '16px',\n        '::placeholder': {\n          color: '#32325d'\n        }\n      },\n      invalid: {\n        color: '#fa755a',\n        iconColor: '#fa755a'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"hello from Stripe Checkout \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CheckoutForm, \"SbGtqT1IkCm/p/uAgh2bKyJBH9U=\", false, function () {\n  return [useCartContext, useUserContext, useHistory];\n});\n\n_c = CheckoutForm;\n\nconst StripeCheckout = () => {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Elements, {\n      stripe: promise,\n      children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = StripeCheckout;\nconst Wrapper = styled.section`\n  form {\n    width: 30vw;\n    align-self: center;\n    box-shadow: 0px 0px 0px 0.5px rgba(50, 50, 93, 0.1),\n      0px 2px 5px 0px rgba(50, 50, 93, 0.1),\n      0px 1px 1.5px 0px rgba(0, 0, 0, 0.07);\n    border-radius: 7px;\n    padding: 40px;\n  }\n  input {\n    border-radius: 6px;\n    margin-bottom: 6px;\n    padding: 12px;\n    border: 1px solid rgba(50, 50, 93, 0.1);\n    max-height: 44px;\n    font-size: 16px;\n    width: 100%;\n    background: white;\n    box-sizing: border-box;\n  }\n  .result-message {\n    line-height: 22px;\n    font-size: 16px;\n  }\n  .result-message a {\n    color: rgb(89, 111, 214);\n    font-weight: 600;\n    text-decoration: none;\n  }\n  .hidden {\n    display: none;\n  }\n  #card-error {\n    color: rgb(105, 115, 134);\n    font-size: 16px;\n    line-height: 20px;\n    margin-top: 12px;\n    text-align: center;\n  }\n  #card-element {\n    border-radius: 4px 4px 0 0;\n    padding: 12px;\n    border: 1px solid rgba(50, 50, 93, 0.1);\n    max-height: 44px;\n    width: 100%;\n    background: white;\n    box-sizing: border-box;\n  }\n  #payment-request-button {\n    margin-bottom: 32px;\n  }\n  /* Buttons and links */\n  button {\n    background: #5469d4;\n    font-family: Arial, sans-serif;\n    color: #ffffff;\n    border-radius: 0 0 4px 4px;\n    border: 0;\n    padding: 12px 16px;\n    font-size: 16px;\n    font-weight: 600;\n    cursor: pointer;\n    display: block;\n    transition: all 0.2s ease;\n    box-shadow: 0px 4px 5.5px 0px rgba(0, 0, 0, 0.07);\n    width: 100%;\n  }\n  button:hover {\n    filter: contrast(115%);\n  }\n  button:disabled {\n    opacity: 0.5;\n    cursor: default;\n  }\n  /* spinner/processing state, errors */\n  .spinner,\n  .spinner:before,\n  .spinner:after {\n    border-radius: 50%;\n  }\n  .spinner {\n    color: #ffffff;\n    font-size: 22px;\n    text-indent: -99999px;\n    margin: 0px auto;\n    position: relative;\n    width: 20px;\n    height: 20px;\n    box-shadow: inset 0 0 0 2px;\n    -webkit-transform: translateZ(0);\n    -ms-transform: translateZ(0);\n    transform: translateZ(0);\n  }\n  .spinner:before,\n  .spinner:after {\n    position: absolute;\n    content: '';\n  }\n  .spinner:before {\n    width: 10.4px;\n    height: 20.4px;\n    background: #5469d4;\n    border-radius: 20.4px 0 0 20.4px;\n    top: -0.2px;\n    left: -0.2px;\n    -webkit-transform-origin: 10.4px 10.2px;\n    transform-origin: 10.4px 10.2px;\n    -webkit-animation: loading 2s infinite ease 1.5s;\n    animation: loading 2s infinite ease 1.5s;\n  }\n  .spinner:after {\n    width: 10.4px;\n    height: 10.2px;\n    background: #5469d4;\n    border-radius: 0 10.2px 10.2px 0;\n    top: -0.1px;\n    left: 10.2px;\n    -webkit-transform-origin: 0px 10.2px;\n    transform-origin: 0px 10.2px;\n    -webkit-animation: loading 2s infinite ease;\n    animation: loading 2s infinite ease;\n  }\n  @keyframes loading {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n  @media only screen and (max-width: 600px) {\n    form {\n      width: 80vw;\n    }\n  }\n`;\n_c3 = Wrapper;\nexport default StripeCheckout;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"StripeCheckout\");\n$RefreshReg$(_c3, \"Wrapper\");","map":{"version":3,"sources":["C:/Users/Dell XPS/Desktop/react practise/react-course-comfy-sloth-starter/src/components/StripeCheckout.js"],"names":["React","useState","useEffect","styled","loadStripe","CardElement","useStripe","Elements","useElements","axios","useCartContext","useUserContext","formatPrice","useHistory","promise","process","env","REACT_APP_STRIPE_PUBLIEC_KEY","CheckoutForm","cart","totalamount","shippingfee","clearcart","myUser","history","succeeded","setSucceeded","error","setError","processing","setProcessing","disabled","setDisabeld","clientSecret","setClientSecret","cardStyle","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","StripeCheckout","Wrapper","section"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,WAJF,QAKO,yBALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,OAAO,GAAGV,UAAU,CAACW,OAAO,CAACC,GAAR,CAAYC,4BAAb,CAA1B;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEzB,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,WAAN;AAAkBC,IAAAA,WAAlB;AAA8BC,IAAAA;AAA9B,MAA2CZ,cAAc,EAA/D;AACA,QAAM;AAACa,IAAAA;AAAD,MAAWZ,cAAc,EAA/B;AACA,QAAMa,OAAO,GAAGX,UAAU,EAA1B,CAJyB,CAOzB;;AACF,QAAM,CAACY,SAAD,EAAWC,YAAX,IAA2BzB,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAAC0B,KAAD,EAAOC,QAAP,IAAmB3B,QAAQ,CAAC,IAAD,CAAjC;AACA,QAAM,CAAC4B,UAAD,EAAYC,aAAZ,IAA6B7B,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAAC8B,QAAD,EAAUC,WAAV,IAAyB/B,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAM,CAACgC,YAAD,EAAcC,eAAd,IAAiCjC,QAAQ,CAAC,KAAD,CAA/C;AAKE,QAAMkC,SAAS,GAAG;AAChBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,SADH;AAEJC,QAAAA,UAAU,EAAE,mBAFR;AAGJC,QAAAA,aAAa,EAAE,aAHX;AAIJC,QAAAA,QAAQ,EAAE,MAJN;AAKJ,yBAAiB;AACfH,UAAAA,KAAK,EAAE;AADQ;AALb,OADD;AAULI,MAAAA,OAAO,EAAE;AACPJ,QAAAA,KAAK,EAAE,SADA;AAEPK,QAAAA,SAAS,EAAE;AAFJ;AAVJ;AADS,GAAlB;AAmBA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CArCD;;GAAMzB,Y;UAE6CR,c,EAChCC,c,EACDE,U;;;KAJZK,Y;;AAuCN,MAAM0B,cAAc,GAAG,MAAM;AAC3B,sBACE,QAAC,OAAD;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,MAAM,EAAE9B,OAAlB;AAAA,6BACA,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CARD;;MAAM8B,c;AAUN,MAAMC,OAAO,GAAG1C,MAAM,CAAC2C,OAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1IA;MAAMD,O;AA4IN,eAAeD,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport {\r\n  CardElement,\r\n  useStripe,\r\n  Elements,\r\n  useElements,\r\n} from '@stripe/react-stripe-js'\r\nimport axios from 'axios'\r\nimport { useCartContext } from '../context/cart_context'\r\nimport { useUserContext } from '../context/user_context'\r\nimport { formatPrice } from '../utils/helpers'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst promise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIEC_KEY)\r\n\r\n\r\nconst CheckoutForm = () => {\r\n\r\n  const {cart,totalamount,shippingfee,clearcart} = useCartContext()\r\n  const {myUser} = useUserContext()\r\n  const history = useHistory()\r\n\r\n\r\n  //stripe stuff\r\nconst [succeeded,setSucceeded] = useState(false)\r\nconst [error,setError] = useState(null)\r\nconst [processing,setProcessing] = useState('')\r\nconst [disabled,setDisabeld] = useState(true)\r\nconst [clientSecret,setClientSecret] = useState(false)\r\n\r\n\r\n\r\n\r\n  const cardStyle = {\r\n    style: {\r\n      base: {\r\n        color: '#32325d',\r\n        fontFamily: 'Arial, sans-serif',\r\n        fontSmoothing: 'antialiased',\r\n        fontSize: '16px',\r\n        '::placeholder': {\r\n          color: '#32325d',\r\n        },\r\n      },\r\n      invalid: {\r\n        color: '#fa755a',\r\n        iconColor: '#fa755a',\r\n      },\r\n    },\r\n  }\r\n\r\n\r\n  return <h4>hello from Stripe Checkout </h4>\r\n}\r\n\r\nconst StripeCheckout = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Elements stripe={promise}>\r\n      <CheckoutForm />\r\n      </Elements>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  form {\r\n    width: 30vw;\r\n    align-self: center;\r\n    box-shadow: 0px 0px 0px 0.5px rgba(50, 50, 93, 0.1),\r\n      0px 2px 5px 0px rgba(50, 50, 93, 0.1),\r\n      0px 1px 1.5px 0px rgba(0, 0, 0, 0.07);\r\n    border-radius: 7px;\r\n    padding: 40px;\r\n  }\r\n  input {\r\n    border-radius: 6px;\r\n    margin-bottom: 6px;\r\n    padding: 12px;\r\n    border: 1px solid rgba(50, 50, 93, 0.1);\r\n    max-height: 44px;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    background: white;\r\n    box-sizing: border-box;\r\n  }\r\n  .result-message {\r\n    line-height: 22px;\r\n    font-size: 16px;\r\n  }\r\n  .result-message a {\r\n    color: rgb(89, 111, 214);\r\n    font-weight: 600;\r\n    text-decoration: none;\r\n  }\r\n  .hidden {\r\n    display: none;\r\n  }\r\n  #card-error {\r\n    color: rgb(105, 115, 134);\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    margin-top: 12px;\r\n    text-align: center;\r\n  }\r\n  #card-element {\r\n    border-radius: 4px 4px 0 0;\r\n    padding: 12px;\r\n    border: 1px solid rgba(50, 50, 93, 0.1);\r\n    max-height: 44px;\r\n    width: 100%;\r\n    background: white;\r\n    box-sizing: border-box;\r\n  }\r\n  #payment-request-button {\r\n    margin-bottom: 32px;\r\n  }\r\n  /* Buttons and links */\r\n  button {\r\n    background: #5469d4;\r\n    font-family: Arial, sans-serif;\r\n    color: #ffffff;\r\n    border-radius: 0 0 4px 4px;\r\n    border: 0;\r\n    padding: 12px 16px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    display: block;\r\n    transition: all 0.2s ease;\r\n    box-shadow: 0px 4px 5.5px 0px rgba(0, 0, 0, 0.07);\r\n    width: 100%;\r\n  }\r\n  button:hover {\r\n    filter: contrast(115%);\r\n  }\r\n  button:disabled {\r\n    opacity: 0.5;\r\n    cursor: default;\r\n  }\r\n  /* spinner/processing state, errors */\r\n  .spinner,\r\n  .spinner:before,\r\n  .spinner:after {\r\n    border-radius: 50%;\r\n  }\r\n  .spinner {\r\n    color: #ffffff;\r\n    font-size: 22px;\r\n    text-indent: -99999px;\r\n    margin: 0px auto;\r\n    position: relative;\r\n    width: 20px;\r\n    height: 20px;\r\n    box-shadow: inset 0 0 0 2px;\r\n    -webkit-transform: translateZ(0);\r\n    -ms-transform: translateZ(0);\r\n    transform: translateZ(0);\r\n  }\r\n  .spinner:before,\r\n  .spinner:after {\r\n    position: absolute;\r\n    content: '';\r\n  }\r\n  .spinner:before {\r\n    width: 10.4px;\r\n    height: 20.4px;\r\n    background: #5469d4;\r\n    border-radius: 20.4px 0 0 20.4px;\r\n    top: -0.2px;\r\n    left: -0.2px;\r\n    -webkit-transform-origin: 10.4px 10.2px;\r\n    transform-origin: 10.4px 10.2px;\r\n    -webkit-animation: loading 2s infinite ease 1.5s;\r\n    animation: loading 2s infinite ease 1.5s;\r\n  }\r\n  .spinner:after {\r\n    width: 10.4px;\r\n    height: 10.2px;\r\n    background: #5469d4;\r\n    border-radius: 0 10.2px 10.2px 0;\r\n    top: -0.1px;\r\n    left: 10.2px;\r\n    -webkit-transform-origin: 0px 10.2px;\r\n    transform-origin: 0px 10.2px;\r\n    -webkit-animation: loading 2s infinite ease;\r\n    animation: loading 2s infinite ease;\r\n  }\r\n  @keyframes loading {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  @media only screen and (max-width: 600px) {\r\n    form {\r\n      width: 80vw;\r\n    }\r\n  }\r\n`\r\n\r\nexport default StripeCheckout\r\n"]},"metadata":{},"sourceType":"module"}