{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell XPS\\\\Desktop\\\\react practise\\\\react-course-comfy-sloth-starter\\\\src\\\\context\\\\cart_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useContext, useReducer } from 'react';\nimport reducer from '../reducers/cart_reducer';\nimport { ADD_TO_CART, REMOVE_CART_ITEM, TOGGLE_CART_ITEM_AMOUNT, CLEAR_CART, COUNT_CART_TOTALS } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getLocalStorage = () => {\n  let cart = localStorage.getItem('cart');\n\n  if (cart) {\n    return JSON.parse(localStorage.getItem('cart'));\n  } else {\n    return [];\n  }\n};\n\nconst initialState = {\n  cart: getLocalStorage(),\n  totalitems: 0,\n  totalamount: 0,\n  shippingfee: 534\n};\nconst CartContext = /*#__PURE__*/React.createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState); //addtocart\n\n  const addtocart = (id, color, amount, product) => {\n    dispatch({\n      type: ADD_TO_CART,\n      payload: {\n        id,\n        color,\n        amount,\n        product\n      }\n    });\n  };\n\n  const removeitem = id => {\n    dispatch({\n      type: REMOVE_CART_ITEM,\n      payload: id\n    });\n  };\n\n  const toggleamount = (id, value) => {\n    dispatch({\n      type: TOGGLE_CART_ITEM_AMOUNT,\n      payload: {\n        id,\n        value\n      }\n    });\n  };\n\n  const clearcart = () => {\n    dispatch({\n      type: CLEAR_CART\n    });\n  }; //for localstorage\n\n\n  useEffect(() => {\n    //for cart totals\n    dispatch({\n      type: COUNT_CART_TOTALS\n    });\n    localStorage.setItem('cart', JSON.stringify(state.cart));\n  }, [state.cart]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: { ...state,\n      addtocart,\n      removeitem,\n      toggleamount,\n      clearcart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}; // make sure use\n\n_s(CartProvider, \"gZZ3TaNWFnk5pxLxmdKGLDXNo7Y=\");\n\n_c = CartProvider;\nexport const useCartContext = () => {\n  _s2();\n\n  return useContext(CartContext);\n};\n\n_s2(useCartContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Dell XPS/Desktop/react practise/react-course-comfy-sloth-starter/src/context/cart_context.js"],"names":["React","useEffect","useContext","useReducer","reducer","ADD_TO_CART","REMOVE_CART_ITEM","TOGGLE_CART_ITEM_AMOUNT","CLEAR_CART","COUNT_CART_TOTALS","getLocalStorage","cart","localStorage","getItem","JSON","parse","initialState","totalitems","totalamount","shippingfee","CartContext","createContext","CartProvider","children","state","dispatch","addtocart","id","color","amount","product","type","payload","removeitem","toggleamount","value","clearcart","setItem","stringify","useCartContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,UAAvC,QAAyD,OAAzD;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SACEC,WADF,EAEEC,gBAFF,EAGEC,uBAHF,EAIEC,UAJF,EAKEC,iBALF,QAMO,YANP;;;AAQC,MAAMC,eAAe,GAAG,MAAK;AAC3B,MAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;;AACA,MAAGF,IAAH,EAAQ;AACN,WAAOG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD,GAFD,MAEM;AACJ,WAAO,EAAP;AACD;AACF,CAPD;;AASD,MAAMG,YAAY,GAAG;AACnBL,EAAAA,IAAI,EAACD,eAAe,EADD;AAEnBO,EAAAA,UAAU,EAAC,CAFQ;AAGnBC,EAAAA,WAAW,EAAC,CAHO;AAInBC,EAAAA,WAAW,EAAC;AAJO,CAArB;AAOA,MAAMC,WAAW,gBAAGpB,KAAK,CAACqB,aAAN,EAApB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAE5C,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBtB,UAAU,CAACC,OAAD,EAASY,YAAT,CAAnC,CAF4C,CAI5C;;AACA,QAAMU,SAAS,GAAG,CAACC,EAAD,EAAIC,KAAJ,EAAUC,MAAV,EAAiBC,OAAjB,KAA2B;AAC3CL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAC1B,WADE;AAEP2B,MAAAA,OAAO,EAAC;AAACL,QAAAA,EAAD;AAAIC,QAAAA,KAAJ;AAAUC,QAAAA,MAAV;AAAiBC,QAAAA;AAAjB;AAFD,KAAD,CAAR;AAID,GALD;;AAOA,QAAMG,UAAU,GAAIN,EAAD,IAAO;AACxBF,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAGzB,gBADA;AAEP0B,MAAAA,OAAO,EAACL;AAFD,KAAD,CAAR;AAID,GALD;;AAQA,QAAMO,YAAY,GAAE,CAACP,EAAD,EAAIQ,KAAJ,KAAa;AAC/BV,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAACxB,uBADE;AAEPyB,MAAAA,OAAO,EAAC;AAACL,QAAAA,EAAD;AAAIQ,QAAAA;AAAJ;AAFD,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,SAAS,GAAG,MAAK;AACrBX,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAACvB;AADE,KAAD,CAAR;AAGD,GAJD,CA3B4C,CAiC5C;;;AACAP,EAAAA,SAAS,CAAC,MAAI;AACZ;AACAwB,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAACtB;AADE,KAAD,CAAR;AAGAG,IAAAA,YAAY,CAACyB,OAAb,CAAqB,MAArB,EAA4BvB,IAAI,CAACwB,SAAL,CAAed,KAAK,CAACb,IAArB,CAA5B;AACD,GANQ,EAMP,CAACa,KAAK,CAACb,IAAP,CANO,CAAT;AAQA,sBACE,QAAC,WAAD,CAAa,QAAb;AACA,IAAA,KAAK,EAAE,EAAC,GAAGa,KAAJ;AACLE,MAAAA,SADK;AAELO,MAAAA,UAFK;AAGLC,MAAAA,YAHK;AAILE,MAAAA;AAJK,KADP;AAAA,cAOGb;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CApDM,C,CAqDP;;GArDaD,Y;;KAAAA,Y;AAsDb,OAAO,MAAMiB,cAAc,GAAG,MAAM;AAAA;;AAClC,SAAOrC,UAAU,CAACkB,WAAD,CAAjB;AACD,CAFM;;IAAMmB,c","sourcesContent":["import React, { useEffect, useContext, useReducer } from 'react'\r\nimport reducer from '../reducers/cart_reducer'\r\nimport {\r\n  ADD_TO_CART,\r\n  REMOVE_CART_ITEM,\r\n  TOGGLE_CART_ITEM_AMOUNT,\r\n  CLEAR_CART,\r\n  COUNT_CART_TOTALS,\r\n} from '../actions'\r\n\r\n const getLocalStorage = () =>{\r\n   let cart = localStorage.getItem('cart')\r\n   if(cart){\r\n     return JSON.parse(localStorage.getItem('cart'))\r\n   }else {\r\n     return []\r\n   }\r\n }\r\n\r\nconst initialState = {\r\n  cart:getLocalStorage(),\r\n  totalitems:0,\r\n  totalamount:0,\r\n  shippingfee:534\r\n}\r\n\r\nconst CartContext = React.createContext()\r\n\r\nexport const CartProvider = ({ children }) => {\r\n\r\n  const [state,dispatch] = useReducer(reducer,initialState)\r\n\r\n  //addtocart\r\n  const addtocart = (id,color,amount,product)=>{\r\n    dispatch({\r\n      type:ADD_TO_CART,\r\n      payload:{id,color,amount,product}\r\n    })\r\n  }\r\n\r\n  const removeitem = (id) =>{\r\n    dispatch({\r\n      type : REMOVE_CART_ITEM,\r\n      payload:id\r\n    })\r\n  }\r\n\r\n\r\n  const toggleamount =(id,value) =>{\r\n    dispatch({\r\n      type:TOGGLE_CART_ITEM_AMOUNT,\r\n      payload:{id,value}\r\n    })\r\n  }\r\n\r\n  const clearcart = () =>{\r\n    dispatch({\r\n      type:CLEAR_CART\r\n    })\r\n  }\r\n\r\n  //for localstorage\r\n  useEffect(()=>{\r\n    //for cart totals\r\n    dispatch({\r\n      type:COUNT_CART_TOTALS\r\n    })\r\n    localStorage.setItem('cart',JSON.stringify(state.cart))\r\n  },[state.cart])\r\n\r\n  return (\r\n    <CartContext.Provider \r\n    value={{...state,\r\n      addtocart,\r\n      removeitem,\r\n      toggleamount,\r\n      clearcart\r\n    }}>\r\n      {children}</CartContext.Provider>\r\n  )\r\n}\r\n// make sure use\r\nexport const useCartContext = () => {\r\n  return useContext(CartContext)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}