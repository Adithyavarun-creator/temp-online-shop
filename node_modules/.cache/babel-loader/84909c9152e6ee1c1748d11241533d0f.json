{"ast":null,"code":"import { ADD_TO_CART, CLEAR_CART, COUNT_CART_TOTALS, REMOVE_CART_ITEM, TOGGLE_CART_ITEM_AMOUNT } from '../actions';\n\nconst cart_reducer = (state, action) => {\n  if (action.type === ADD_TO_CART) {\n    const {\n      id,\n      color,\n      amount,\n      product\n    } = action.payload;\n    const tempitem = state.cart.find(i => i.id === id + color);\n\n    if (tempitem) {\n      const tempcart = state.cart.map(item => {\n        if (item.id === id + color) {\n          let newamount = item.amount + amount;\n\n          if (newamount > item.max) {\n            newamount = item.max;\n          }\n\n          return { ...item,\n            amount: newamount\n          };\n        } else {\n          return item;\n        }\n      });\n      return { ...state,\n        cart: tempcart\n      };\n    } else {\n      //for a new item creation\n      const newitem = {\n        id: id + color,\n        name: product.name,\n        color,\n        amount,\n        image: product.images[0].url,\n        price: product.price,\n        max: product.stock\n      };\n      return { ...state,\n        cart: [...state.cart, newitem]\n      };\n    }\n  }\n\n  if (action.type === REMOVE_CART_ITEM) {\n    const tempcart = state.cart.filter(item => item.id !== action.payload);\n    return { ...state,\n      cart: tempcart\n    };\n  }\n\n  if (action.type === CLEAR_CART) {\n    return { ...state,\n      cart: []\n    };\n  }\n\n  if (action.type === TOGGLE_CART_ITEM_AMOUNT) {\n    const {\n      id,\n      value\n    } = action.payload;\n    const tempcart = state.cart.map(item => {\n      if (item.id === id) {\n        if (value === \"inc\") {\n          let newamount = item.amount + 1;\n\n          if (newamount > item.max) {\n            newamount = item.max;\n          }\n\n          return { ...item,\n            amount: newamount\n          };\n        }\n\n        if (value === \"dec\") {\n          let newamount = item.amount - 1;\n\n          if (newamount < 1) {\n            newamount = 1;\n          }\n\n          return { ...item,\n            amount: newamount\n          };\n        }\n      } else {\n        return item;\n      }\n    });\n    return { ...state,\n      cart: tempcart\n    };\n  }\n\n  if (action.type === COUNT_CART_TOTALS) {\n    const {\n      totalitems,\n      totalamount\n    } = state.cart.reduce((total, cartitem) => {\n      console.log(total.totalitems); //console.log(cartitem)\n\n      const {\n        amount,\n        price\n      } = cartitem;\n      total.totalitems = total.totalitems + amount;\n      total.totalamount = total.totalamount + price * amount;\n      return total;\n    }, {\n      totalitems: 0,\n      totalamount: 0\n    });\n    return { ...state,\n      totalitems,\n      totalamount\n    };\n  }\n\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default cart_reducer;","map":{"version":3,"sources":["C:/Users/Dell XPS/Desktop/react practise/react-course-comfy-sloth-starter/src/reducers/cart_reducer.js"],"names":["ADD_TO_CART","CLEAR_CART","COUNT_CART_TOTALS","REMOVE_CART_ITEM","TOGGLE_CART_ITEM_AMOUNT","cart_reducer","state","action","type","id","color","amount","product","payload","tempitem","cart","find","i","tempcart","map","item","newamount","max","newitem","name","image","images","url","price","stock","filter","value","totalitems","totalamount","reduce","total","cartitem","console","log","Error"],"mappings":"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","sourcesContent":["import {\r\n  ADD_TO_CART,\r\n  CLEAR_CART,\r\n  COUNT_CART_TOTALS,\r\n  REMOVE_CART_ITEM,\r\n  TOGGLE_CART_ITEM_AMOUNT,\r\n} from '../actions'\r\n\r\nconst cart_reducer = (state, action) => {\r\n  if(action.type === ADD_TO_CART){\r\n    const {id,color,amount,product} = action.payload\r\n    const tempitem = state.cart.find((i)=>i.id === id+color) \r\n\r\n    if(tempitem){\r\n      const tempcart = state.cart.map((item)=>{\r\n        if(item.id === id+color){\r\n          let newamount = item.amount + amount\r\n          if(newamount > item.max){\r\n            newamount = item.max\r\n          }\r\n          return {\r\n            ...item,\r\n          amount:newamount\r\n        }\r\n        }else{\r\n          return item\r\n        }\r\n      \r\n    }\r\n    )\r\n    return {...state,cart:tempcart}\r\n    }else{       //for a new item creation\r\n      const newitem ={\r\n        id:id+color,\r\n        name:product.name,\r\n        color,\r\n        amount,\r\n        image:product.images[0].url,\r\n        price:product.price,\r\n        max:product.stock\r\n      }\r\n      return {...state,\r\n      cart:[...state.cart,newitem]\r\n    }\r\n    }\r\n  }\r\n\r\n  if(action.type === REMOVE_CART_ITEM){\r\n      const tempcart = state.cart.filter((item)=> item.id !== action.payload)\r\n    return {\r\n        ...state,\r\n        cart:tempcart\r\n    }\r\n  }\r\n\r\n\r\n  if(action.type === CLEAR_CART){\r\n  return {\r\n      ...state,\r\n      cart:[]\r\n  }\r\n}\r\n\r\nif(action.type === TOGGLE_CART_ITEM_AMOUNT){\r\n  const {id,value} = action.payload\r\n  const tempcart = state.cart.map((item)=>{\r\n    if(item.id === id){\r\n      if(value === \"inc\"){\r\n        let newamount = item.amount +1\r\n        if(newamount > item.max){\r\n          newamount = item.max\r\n        }\r\n        return {...item,amount:newamount}\r\n      }\r\n      if(value === \"dec\"){\r\n        let newamount = item.amount - 1\r\n        if(newamount < 1){\r\n          newamount = 1\r\n        }\r\n        return {...item,amount:newamount}\r\n      }\r\n    }else{\r\n      return item\r\n    }\r\n  })\r\n  return {\r\n        ...state,\r\n        cart:tempcart\r\n  }\r\n}\r\n\r\nif(action.type === COUNT_CART_TOTALS){\r\n  const {totalitems,totalamount} = state.cart.reduce((total,cartitem)=>{\r\n    console.log(total.totalitems)\r\n   //console.log(cartitem)\r\n    const {amount,price} = cartitem\r\n    total.totalitems = total.totalitems + amount\r\n    total.totalamount = total.totalamount + price * amount\r\n    return total\r\n  },{\r\n    totalitems:0,\r\n    totalamount:0\r\n  })\r\n  return {\r\n    ...state,\r\n    totalitems,\r\n    totalamount\r\n  }\r\n}\r\n\r\n  throw new Error(`No Matching \"${action.type}\" - action type`)\r\n}\r\n\r\nexport default cart_reducer\r\n"]},"metadata":{},"sourceType":"module"}